<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\UVBuild\test12.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\UVBuild\test12.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Wed Apr 25 19:41:17 2018
<BR><P>
<H3>Maximum Stack Usage =         88 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
VADC0_C0_0_IRQHandler &rArr; __aeabi_ddiv
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">CCU40_0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">CCU40_0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">CCU40_0_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[1c]">CCU40_1_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[1d]">CCU40_2_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[1e]">CCU40_3_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[f]">ERU0_0_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[10]">ERU0_1_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[11]">ERU0_2_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[12]">ERU0_3_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[8]">HardFault_Handler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[20]">Reset_Handler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(RESET)
 <LI><a href="#[c]">SCU_0_IRQHandler</a> from global_scu_xmc1.o(i.SCU_0_IRQHandler) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[d]">SCU_1_IRQHandler</a> from global_scu_xmc1.o(i.SCU_1_IRQHandler) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[e]">SCU_2_IRQHandler</a> from global_scu_xmc1.o(i.SCU_2_IRQHandler) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[9]">SVC_Handler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[b]">SysTick_Handler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[6]">SystemInit</a> from system_xmc1100.o(i.SystemInit) referenced from startup_xmc1100.o(.text)
 <LI><a href="#[13]">USIC0_0_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[14]">USIC0_1_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[15]">USIC0_2_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[16]">USIC0_3_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[17]">USIC0_4_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[18]">USIC0_5_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[19]">VADC0_C0_0_IRQHandler</a> from main.o(i.VADC0_C0_0_IRQHandler) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[1a]">VADC0_C0_1_IRQHandler</a> from startup_xmc1100.o(.text) referenced from startup_xmc1100.o(.ARM.__at_0x20000000)
 <LI><a href="#[1f]">Watchdog_Handler</a> from main.o(i.Watchdog_Handler) referenced from watchdog_conf.o(.data)
 <LI><a href="#[21]">__main</a> from __main.o(!!!main) referenced from startup_xmc1100.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[25]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[7b]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[26]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[7d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[2a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[80]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[81]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[82]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[83]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[84]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[85]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[86]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[87]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[88]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[89]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[90]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[91]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[92]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[2f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[93]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[94]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[96]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[99]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[24]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[9a]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[27]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[29]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9b]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; DAVE_Init &rArr; PWM_Init &rArr; PWM_lCCU4_Init &rArr; GLOBAL_CCU4_Init &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9d]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[30]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[20]"></a>Reset_Handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))

<P><STRONG><a name="[1b]"></a>CCU40_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCU40_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[1c]"></a>CCU40_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[1d]"></a>CCU40_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[1e]"></a>CCU40_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[f]"></a>ERU0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[10]"></a>ERU0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[11]"></a>ERU0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[12]"></a>ERU0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[13]"></a>USIC0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[14]"></a>USIC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[15]"></a>USIC0_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[16]"></a>USIC0_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[17]"></a>USIC0_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[18]"></a>USIC0_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[1a]"></a>VADC0_C0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[22]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_xmc1100.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_SetDutyCycle
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[67]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_0_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_0_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[32]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>

<P><STRONG><a name="[a5]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VADC0_C0_0_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[38]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[39]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[28]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[2d]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3a]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[a7]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a8]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[a9]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>ADC_MEASUREMENT_Init</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, adc_measurement.o(i.ADC_MEASUREMENT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ADC_MEASUREMENT_Init &rArr; GLOBAL_ADC_Init &rArr; XMC_VADC_GLOBAL_Init &rArr; XMC_VADC_GLOBAL_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_SetResultEventInterruptNode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_InputClassInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_BackgroundInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_ADC_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_BackgroundTriggerConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAVE_Init
</UL>

<P><STRONG><a name="[45]"></a>ADC_MEASUREMENT_StartConversion</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, adc_measurement.o(i.ADC_MEASUREMENT_StartConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_MEASUREMENT_StartConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_BackgroundTriggerConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>CLOCK_XMC1_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, clock_xmc1.o(i.CLOCK_XMC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLOCK_XMC1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAVE_Init
</UL>

<P><STRONG><a name="[46]"></a>DAVE_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dave.o(i.DAVE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DAVE_Init &rArr; PWM_Init &rArr; PWM_lCCU4_Init &rArr; GLOBAL_CCU4_Init &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLOCK_XMC1_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>GLOBAL_ADC_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, global_adc.o(i.GLOBAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GLOBAL_ADC_Init &rArr; XMC_VADC_GLOBAL_Init &rArr; XMC_VADC_GLOBAL_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_StartupCalibration
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
</UL>

<P><STRONG><a name="[4c]"></a>GLOBAL_CCU4_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, global_ccu4.o(i.GLOBAL_CCU4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GLOBAL_CCU4_Init &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[4e]"></a>GLOBAL_SCU_XMC1_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, global_scu_xmc1.o(i.GLOBAL_SCU_XMC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLOBAL_SCU_XMC1_Init &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_lPrewarning_Configure
</UL>

<P><STRONG><a name="[51]"></a>GLOBAL_SCU_XMC1_RegisterCallback</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, global_scu_xmc1.o(i.GLOBAL_SCU_XMC1_RegisterCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GLOBAL_SCU_XMC1_RegisterCallback &rArr; XMC_SCU_INTERRUPT_SetEventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_INTERRUPT_SetEventHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_lPrewarning_Configure
</UL>

<P><STRONG><a name="[48]"></a>PWM_Init</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pwm.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = PWM_Init &rArr; PWM_lCCU4_Init &rArr; GLOBAL_CCU4_Init &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAVE_Init
</UL>

<P><STRONG><a name="[54]"></a>PWM_SetDutyCycle</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, pwm.o(i.PWM_SetDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWM_SetDutyCycle &rArr; PWM_lCCU4_SetDutyCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_SetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>PWM_Start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pwm.o(i.PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM_Start &rArr; PWM_lCCU4_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[58]"></a>PWM_lCCU4_ConfigInterrupts</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pwm.o(i.PWM_lCCU4_ConfigInterrupts))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PWM_lCCU4_ConfigInterrupts &rArr; XMC_CCU4_SLICE_SetInterruptNode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetInterruptNode
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_EnableEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[53]"></a>PWM_lCCU4_Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, pwm.o(i.PWM_lCCU4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PWM_lCCU4_Init &rArr; GLOBAL_CCU4_Init &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_CCU4_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_GPIO_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_CompareInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_ConfigInterrupts
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Start
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerPeriodMatch
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerCompareMatch
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableShadowTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[55]"></a>PWM_lCCU4_SetDutyCycle</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, pwm.o(i.PWM_lCCU4_SetDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PWM_lCCU4_SetDutyCycle
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetTimerCompareMatch
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableShadowTransfer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetDutyCycle
</UL>

<P><STRONG><a name="[57]"></a>PWM_lCCU4_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pwm.o(i.PWM_lCCU4_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_lCCU4_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Start
</UL>

<P><STRONG><a name="[c]"></a>SCU_0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, global_scu_xmc1.o(i.SCU_0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCU_0_IRQHandler &rArr; XMC_SCU_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[d]"></a>SCU_1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, global_scu_xmc1.o(i.SCU_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCU_1_IRQHandler &rArr; XMC_SCU_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[e]"></a>SCU_2_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, global_scu_xmc1.o(i.SCU_2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SCU_2_IRQHandler &rArr; XMC_SCU_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[62]"></a>SystemCoreClockSetup</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, clock_xmc1_conf.o(i.SystemCoreClockSetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemCoreClockSetup &rArr; XMC_SCU_CLOCK_Init &rArr; XMC_SCU_CLOCK_ScaleMCLKFrequency &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[64]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, system_xmc1100.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_ScaleMCLKFrequency
</UL>

<P><STRONG><a name="[65]"></a>SystemCoreSetup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpu_ctrl_xmc1_conf.o(i.SystemCoreSetup))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system_xmc1100.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SystemInit &rArr; SystemCoreClockSetup &rArr; XMC_SCU_CLOCK_Init &rArr; XMC_SCU_CLOCK_ScaleMCLKFrequency &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetup
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>VADC0_C0_0_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, main.o(i.VADC0_C0_0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VADC0_C0_0_IRQHandler &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xmc1100.o(.ARM.__at_0x20000000)
</UL>
<P><STRONG><a name="[49]"></a>WATCHDOG_Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, watchdog.o(i.WATCHDOG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = WATCHDOG_Init &rArr; WATCHDOG_lPrewarning_Configure &rArr; GLOBAL_SCU_XMC1_RegisterCallback &rArr; XMC_SCU_INTERRUPT_SetEventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_WDT_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_lPrewarning_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAVE_Init
</UL>

<P><STRONG><a name="[68]"></a>WATCHDOG_lPrewarning_Configure</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, watchdog.o(i.WATCHDOG_lPrewarning_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = WATCHDOG_lPrewarning_Configure &rArr; GLOBAL_SCU_XMC1_RegisterCallback &rArr; XMC_SCU_INTERRUPT_SetEventHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_SCU_XMC1_RegisterCallback
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_SCU_XMC1_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_INTERRUPT_EnableEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_Init
</UL>

<P><STRONG><a name="[1f]"></a>Watchdog_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.Watchdog_Handler))
<BR>[Address Reference Count : 1]<UL><LI> watchdog_conf.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>XMC_CCU4_EnableModule</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, xmc_ccu4.o(i.XMC_CCU4_EnableModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_Init
</UL>

<P><STRONG><a name="[4d]"></a>XMC_CCU4_Init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, xmc_ccu4.o(i.XMC_CCU4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_CCU4_Init
</UL>

<P><STRONG><a name="[5b]"></a>XMC_CCU4_SLICE_CompareInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, xmc_ccu4.o(i.XMC_CCU4_SLICE_CompareInit))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[5a]"></a>XMC_CCU4_SLICE_SetInterruptNode</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, xmc_ccu4.o(i.XMC_CCU4_SLICE_SetInterruptNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_CCU4_SLICE_SetInterruptNode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_ConfigInterrupts
</UL>

<P><STRONG><a name="[5f]"></a>XMC_GPIO_Init</STRONG> (Thumb, 158 bytes, Stack size 12 bytes, xmc1_gpio.o(i.XMC_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XMC_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[63]"></a>XMC_SCU_CLOCK_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, xmc1_scu.o(i.XMC_SCU_CLOCK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XMC_SCU_CLOCK_Init &rArr; XMC_SCU_CLOCK_ScaleMCLKFrequency &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_UnlockProtectedBits
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_LockProtectedBits
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_ScaleMCLKFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockSetup
</UL>

<P><STRONG><a name="[70]"></a>XMC_SCU_CLOCK_ScaleMCLKFrequency</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, xmc1_scu.o(i.XMC_SCU_CLOCK_ScaleMCLKFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_SCU_CLOCK_ScaleMCLKFrequency &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_UnlockProtectedBits
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_LockProtectedBits
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_lFrequencyUpScaling
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_lFrequencyDownScaling
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_Init
</UL>

<P><STRONG><a name="[6c]"></a>XMC_SCU_CLOCK_UngatePeripheralClock</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, xmc1_scu.o(i.XMC_SCU_CLOCK_UngatePeripheralClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_UnlockProtectedBits
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_LockProtectedBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_EnableModule
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_WDT_Enable
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_EnableModule
</UL>

<P><STRONG><a name="[74]"></a>XMC_SCU_INTERRUPT_ClearEventStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_INTERRUPT_ClearEventStatus))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>XMC_SCU_INTERRUPT_EnableEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_INTERRUPT_EnableEvent))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_lPrewarning_Configure
</UL>

<P><STRONG><a name="[52]"></a>XMC_SCU_INTERRUPT_SetEventHandler</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, xmc1_scu.o(i.XMC_SCU_INTERRUPT_SetEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XMC_SCU_INTERRUPT_SetEventHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_SCU_XMC1_RegisterCallback
</UL>

<P><STRONG><a name="[73]"></a>XMC_SCU_INTERUPT_GetEventStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_INTERUPT_GetEventStatus))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>XMC_SCU_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, xmc1_scu.o(i.XMC_SCU_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XMC_SCU_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_INTERUPT_GetEventStatus
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_INTERRUPT_ClearEventStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_2_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_1_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_0_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>XMC_SCU_LockProtectedBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_LockProtectedBits))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_ScaleMCLKFrequency
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
</UL>

<P><STRONG><a name="[6e]"></a>XMC_SCU_UnlockProtectedBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_UnlockProtectedBits))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_ScaleMCLKFrequency
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
</UL>

<P><STRONG><a name="[41]"></a>XMC_VADC_GLOBAL_BackgroundInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, xmc_vadc.o(i.XMC_VADC_GLOBAL_BackgroundInit))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
</UL>

<P><STRONG><a name="[75]"></a>XMC_VADC_GLOBAL_EnableModule</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, xmc_vadc.o(i.XMC_VADC_GLOBAL_EnableModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XMC_VADC_GLOBAL_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_Init
</UL>

<P><STRONG><a name="[4a]"></a>XMC_VADC_GLOBAL_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, xmc_vadc.o(i.XMC_VADC_GLOBAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = XMC_VADC_GLOBAL_Init &rArr; XMC_VADC_GLOBAL_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_VADC_GLOBAL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_ADC_Init
</UL>

<P><STRONG><a name="[40]"></a>XMC_VADC_GLOBAL_InputClassInit</STRONG> (Thumb, 18 bytes, Stack size 28 bytes, xmc_vadc.o(i.XMC_VADC_GLOBAL_InputClassInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = XMC_VADC_GLOBAL_InputClassInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
</UL>

<P><STRONG><a name="[42]"></a>XMC_VADC_GLOBAL_SetResultEventInterruptNode</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, xmc_vadc.o(i.XMC_VADC_GLOBAL_SetResultEventInterruptNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XMC_VADC_GLOBAL_SetResultEventInterruptNode
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
</UL>

<P><STRONG><a name="[4b]"></a>XMC_VADC_GLOBAL_StartupCalibration</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, xmc_vadc.o(i.XMC_VADC_GLOBAL_StartupCalibration))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_ADC_Init
</UL>

<P><STRONG><a name="[76]"></a>XMC_WDT_Enable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, xmc_wdt.o(i.XMC_WDT_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = XMC_WDT_Enable &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_WDT_Init
</UL>

<P><STRONG><a name="[69]"></a>XMC_WDT_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, xmc_wdt.o(i.XMC_WDT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = XMC_WDT_Init &rArr; XMC_WDT_Enable &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_WDT_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WATCHDOG_Init
</UL>

<P><STRONG><a name="[6d]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, xmc_ccu4.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_CCU4_SLICE_SetInterruptNode
</UL>

<P><STRONG><a name="[2c]"></a>main</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = main &rArr; DAVE_Init &rArr; PWM_Init &rArr; PWM_lCCU4_Init &rArr; GLOBAL_CCU4_Init &rArr; XMC_CCU4_Init &rArr; XMC_CCU4_EnableModule &rArr; XMC_SCU_CLOCK_UngatePeripheralClock
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetDutyCycle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAVE_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_StartConversion
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>_fcmple</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, flef.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[44]"></a>XMC_VADC_GLOBAL_BackgroundTriggerConversion</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc_measurement.o(i.XMC_VADC_GLOBAL_BackgroundTriggerConversion))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_StartConversion
</UL>

<P><STRONG><a name="[43]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, adc_measurement.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MEASUREMENT_Init
</UL>

<P><STRONG><a name="[50]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, global_scu_xmc1.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_SCU_XMC1_Init
</UL>

<P><STRONG><a name="[4f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, global_scu_xmc1.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_SCU_XMC1_Init
</UL>

<P><STRONG><a name="[5e]"></a>XMC_CCU4_EnableShadowTransfer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pwm.o(i.XMC_CCU4_EnableShadowTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_SetDutyCycle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[59]"></a>XMC_CCU4_SLICE_EnableEvent</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(i.XMC_CCU4_SLICE_EnableEvent))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_ConfigInterrupts
</UL>

<P><STRONG><a name="[5d]"></a>XMC_CCU4_SLICE_SetTimerCompareMatch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pwm.o(i.XMC_CCU4_SLICE_SetTimerCompareMatch))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_SetDutyCycle
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[5c]"></a>XMC_CCU4_SLICE_SetTimerPeriodMatch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pwm.o(i.XMC_CCU4_SLICE_SetTimerPeriodMatch))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_lCCU4_Init
</UL>

<P><STRONG><a name="[71]"></a>XMC_SCU_CLOCK_lFrequencyDownScaling</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_CLOCK_lFrequencyDownScaling))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_ScaleMCLKFrequency
</UL>

<P><STRONG><a name="[72]"></a>XMC_SCU_CLOCK_lFrequencyUpScaling</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, xmc1_scu.o(i.XMC_SCU_CLOCK_lFrequencyUpScaling))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XMC_SCU_CLOCK_ScaleMCLKFrequency
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3c]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
